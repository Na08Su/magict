= nested_form_for [budget.contract_construction, budget], builder: ActionView::Helpers::BulmaFormBuilder do |f|

  .control.is-grouped
    .control
      = link_to '#', method: :post, data: { action_url: costs_reflect_from_quotation_contract_construction_budgets_path(budget.contract_construction, budget),
        confirm_message: t('.reflect_from_quotation_confirm', no: @budget.contract_construction.quotation.no) }, id: 'reflect-from-quotation-button', class: 'button is-small is-light' do
        span.icon.is-small = fa_icon 'level-down'
        span.is-bold = t('.reflect_from_quotation')
    .control
      span.select.is-small = select_tag :cost_budget_class, options_for_select(Cost.budget_classes_i18n.invert, params[:budget_class]), class: 'w100px'

    .control
      span.select.is-small = select_tag :cost, options_for_cost_select(budget_class: params[:budget_class], selected: params[:cost]), style: 'width: 200px'

    .control
      = f.link_to_add(:budget_costs, data: { target: '#budget-class' }, id: 'add-button', class: 'button is-small is-bold is-blue') do
        span.icon.is-small = fa_icon 'plus'
        span = t('button.add_object', name: t('.cost_short_name'))

  table.table.is-bordered.dark.budget_costs_form
    thead
      tr
        th 分類
        th 原価
        th 見積提出金額
        th 見積原価金額
        th.amount style="border-right:none" 実行予算額
        th.amount.blank
          = link_to '#', id: 'copy_quotation_button', data: { confirm: t('.copy_quotation_amount_confirm') } do
            span.icon.is-small = fa_icon 'arrow-circle-down'
          = spacer(5)
          = link_to '#', id: 'delete_amount_button', data: { confirm: t('.delete_amount_confirm') } do
            span.icon.is-small = fa_icon 'minus-circle'
        th.amount 掛率
        th.final-amount style="border-right:none" 最終予算額
        th.final-amount.blank
          / FireFoxでconfirmだとうまく動かない為、JS内でダイアログ表示ロジックを書く
          = link_to '#', id: 'copy_amount_button', data: { confirm_message: t('.copy_amount_confirm') } do
            span.icon.is-small.green = fa_icon 'arrow-circle-down'
          = spacer(5)
          = link_to '#', id: 'delete_final_amount_button', data: { confirm: t('.delete_final_amount_confirm') } do
            span.icon.is-small.green = fa_icon 'minus-circle'
        th.final-amount 掛率
        th 備考
        th
    - Cost.budget_classes.keys.each do |budget_class|
      tbody[id="budget-#{ budget_class }"]
        - @budget.budget_costs.select { |bc| bc.cost.budget_class == budget_class }.sort_by { |bc| bc.cost.code }.each do |budget_cost|
          = f.fields_for :budget_costs, budget_cost, wrapper: false
    tr.total
      td
      th 総合計
      td.text-right = budget.contract_construction.quotation.submitted_total_amount.to_s(:delimited)
      td.text-right = budget.contract_construction.quotation.initial_cost_total_amount.to_s(:delimited)
      td.text-right.total-amount colspan="2" = budget.total_amount.try(:to_s, :delimited) unless budget.total_amount.zero?
      td.text-right.total-amount-ratio = "#{ budget.total_amount_ratio }%" if budget.total_amount_ratio
      td.text-right.total-final-amount colspan="2" = budget.total_final_amount.try(:to_s, :delimited) unless budget.total_final_amount.zero?
      td.text-right.total-final-amount-ratio = "#{ budget.total_final_amount_ratio }%" if budget.total_final_amount_ratio
      td colspan="2"

    / 原価追加ボタン用のテンプレートをレンダリングする
    - f.fields_for :budget_costs, wrapper: false

  = render 'shared/form_buttons', object: budget, index_path: contract_constructions_path,
    resource_path: budget.new_record? ? contract_construction_budgets_path(budget.contract_construction) : contract_construction_budget_path(budget.contract_construction, budget)

javascript:
  $(function() {
    var decision_amount = Number($('#decision_amount').text().replace(/,/g, ''));

    // 原価追加ボタンの追加する位置を変更する
    // B材の場合、B材の一番下にくるように変更
    var changeAddButtonDataTarget = function(selected) {
      // 追加ボタンの属性を書き換え
      // attrだけだとdataで取った時に元の値、逆にdataだけだとHTMLが元の値となるので両方で指定
      $('#add-button').attr('data-target', '#budget-' + selected);
      $('#add-button').data('target', '#budget-' + selected);
    };

    // 予算の総合計の値・掛率を再計算する
    var recalcTotalAmount = function() {
      var total = $.sum('.amount input[type=text]:visible');
      setDelimitedNumber('.total-amount', total);
      var percentage = floatFormat((total / decision_amount) * 100, 1);
      $('.total-amount-ratio').html(percentage + '%');
    };

    // 最終予算の総合計の値・掛率を再計算する
    var recalcTotalFinalAmount = function() {
      var total = $.sum('.final-amount input[type=text]:visible');
      setDelimitedNumber('.total-final-amount', total);
      var percentage = floatFormat((total / decision_amount) * 100, 1);
      $('.total-final-amount-ratio').html(percentage + '%');
    };

    // 原価分類が選択された際に原価のセレクトの内容を書き換える
    $(document).on('change', '#cost_budget_class', function() {
      var selected = $(this).val();
      var elements = $.grep(gon.costs, function(elem, index) {
        return (elem.budget_class == selected);
      }).map(function(e) {
        return { id: e.id, name: e.code + ' : ' + e.name }
      });

      replaceSelectOptions('#cost', elements);
      changeAddButtonDataTarget(selected);
    });

    // 選択した原価の情報を行にセットする
    $(document).on('nested:fieldAdded', function(event) {
      var fields = event.field; 
      fields.find('.cost-budget-class').html($('#cost_budget_class option:selected').text());
      fields.find('.cost-name').html($('#cost option:selected').text());
      fields.find('.cost-id input').val($('#cost').val());
    });

    $(document).on('nested:fieldRemoved', function(event) {
      recalcTotalAmount();
      recalcTotalFinalAmount();
    });

    $('#reflect-from-quotation-button').on('click',  function(event) {
      event.preventDefault();
      if(confirm(this.dataset.confirmMessage)) {
        var form = this.closest('form');
        form.action = this.dataset.actionUrl;
        $(form).find('input[name=_method]').val($(event.target.closest('a')).data('method'));
        form.submit();
      }
      return false;
    });

    // 見積原価金額を実行予算額へコピー
    $('#copy_quotation_button').on('confirm:complete', function(event, answer) {
      event.preventDefault();
      if(answer) {
        $('tr.fields').each(function() {
          var amount = $(this).closest('tr').find('input[name$=\\[quotation_initial_cost_amount\\]]').val();
          setDelimitedNumber( $(this).closest('tr').find('input[type=text][name$=\\[amount\\]]'), amount);
          $(this).closest('tr').find('input[type=hidden][name$=\\[amount\\]]').val(amount.replace(/,/g, ''));
          if(amount !== undefined && amount !== '') {
            var percentage = floatFormat((amount / decision_amount) * 100, 1);
            $(this).closest('tr').find('.amount-ratio label').html(percentage + '%');
          } else {
            $(this).closest('tr').find('.amount-ratio label').html('');
          }
        });
      }
      recalcTotalAmount();
      return false;
    });

    // 実行予算額を削除
    $('#delete_amount_button').on('confirm:complete', function(event, answer) {
      event.preventDefault();
      if(answer) {
        $('tr.fields').each(function() {
          $(this).closest('tr').find('input[name$=\\[amount\\]]').val('');
          $(this).closest('tr').find('.amount-ratio label').html('');
        });
        $('.total-amount').html('');
        $('.total-amount-ratio').html('');
      }
      return false;
    });

    // 実行予算額を最終予算額へコピー
    $('#copy_amount_button').on('click', function(event) {
      event.preventDefault();
      if(confirm($(this).data('confirm-message'))) {
        $('tr.fields').each(function() {
          var amount = $(this).closest('tr').find('input[type=hidden][name$=\\[amount\\]]').val();
          setDelimitedNumber( $(this).closest('tr').find('input[type=text][name$=\\[final_amount\\]]'), amount);
          $(this).closest('tr').find('input[type=hidden][name$=\\[final_amount\\]]').val(amount.replace(/,/g, ''));
          if(amount !== undefined && amount !== '') {
            var percentage = floatFormat((amount / decision_amount) * 100, 1);
            $(this).closest('tr').find('.final-amount-ratio label').html(percentage + '%');
          } else {
            $(this).closest('tr').find('.final-amount-ratio label').html('');
          }
        });
      }
      recalcTotalFinalAmount();
      return false;
    });

    // 実行予算額を削除
    $('#delete_final_amount_button').on('confirm:complete', function(event, answer) {
      event.preventDefault();
      if(answer) {
        $('tr.fields').each(function() {
          $(this).closest('tr').find('input[name$=\\[final_amount\\]]').val('');
          $(this).closest('tr').find('.final-amount-ratio label').html('');
        });
        $('.total-final-amount').html('');
        $('.total-final-amount-ratio').html('');
      }
      return false;
    });

    // 実行予算側の計算(掛率・総合計・総合計の掛率)
    $(document).on('change', 'input[type=text][name$=\\[amount\\]]', function(event) {
      var amount = parseInt( $(this).val().replace(/,/g, '') );
      var percentage = floatFormat((amount / decision_amount) * 100, 1);
      $(this).closest('tr').find('.amount-ratio label').html(percentage + '%');

      recalcTotalAmount();
    });

    // 最終予算側の計算(掛率・総合計・総合計の掛率)
    $(document).on('change', 'input[type=text][name$=\\[final_amount\\]]', function(event) {
      var amount = parseInt( $(this).val().replace(/,/g, '') );
      var percentage = floatFormat((amount / decision_amount) * 100, 1);
      $(this).closest('tr').find('.final-amount-ratio label').html(percentage + '%');

      recalcTotalFinalAmount();
    });

    changeAddButtonDataTarget($('#cost_budget_class').val());
    recalcTotalAmount();
    recalcTotalFinalAmount();
  });
